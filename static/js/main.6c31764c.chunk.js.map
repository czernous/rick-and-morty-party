{"version":3,"sources":["components/Container/ContainerStyle.ts","queries/GetRmCharacters.ts","components/Container/index.tsx","hooks.tsx","components/SearchResults/SearchResultsStyles.ts","components/SearchResults/index.tsx","components/PartyResults/PartyResultsStyles.ts","components/PartyResults/index.tsx","components/Input/InputStyles.ts","components/Input/index.tsx","App.tsx","index.tsx"],"names":["ContainerStyle","styled","div","GET_RM_CHARACTERS","gql","Container","children","useState","searchValue","setSearchValue","onSearchChange","useCallback","e","target","value","useSearchForm","query","delay","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","useDebounce","skip","setSkip","length","useSkip","useQuery","variables","name","data","queryError","characters","status","charState","setCharState","undefined","message","charactersArray","results","useChartacters","error","deletedItems","setDeletedItems","partyRick","setPartyRick","partyMorty","setPartyMorty","getID","currentTarget","getAttribute","getExcludedIds","selectedRick","parseInt","id","selectedMorty","filter","item","filteredCharacters","c","includes","displayedCharacters","slice","onDelete","deletedId","onSelect","selectedId","selectedCharacter","find","test","useChartactersFilter","ResultsGrid","ErrorMsg","Card","CloseBtn","button","CardImage","img","SearchResults","map","className","onClick","width","height","viewBox","fill","xmlns","d","src","image","alt","Wrapper","Results","Heading","h1","CardText","span","PartyResults","InputField","input","Input","placeholder","props","App","onChange","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6c31764c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst ContainerStyle = styled.div`\n  @import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\");\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 810px;\n  margin: 0 auto;\n  font-family: Roboto, sans-serif;\n`;\nexport default ContainerStyle;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_RM_CHARACTERS = gql`\n  query getRMcharacters($name: String!) {\n    characters(filter: { name: $name }) {\n      info {\n        count\n      }\n      results {\n        id\n        name\n        image\n      }\n    }\n  }\n`;\n","import { useQuery } from \"@apollo/client\";\nimport { GET_RM_CHARACTERS } from \"../../queries/GetRmCharacters\";\nimport {\n  useDebounce,\n  useSearchForm,\n  useSkip,\n  useChartacters,\n  useChartactersFilter,\n} from \"../../hooks\";\n\nconst Container = ({ children }: any) => {\n  const { searchValue, onSearchChange } = useSearchForm();\n\n  const query = useDebounce(searchValue);\n  const skip = useSkip(query);\n\n  const { data, error } = useQuery(GET_RM_CHARACTERS, {\n    variables: { name: query },\n    skip,\n  });\n  const { characters, queryError, status } = useChartacters(data, error);\n\n  const { onDelete, onSelect, partyMorty, partyRick, displayedCharacters } =\n    useChartactersFilter(characters);\n\n  return children({\n    onSearchChange,\n    queryError,\n    status,\n    onDelete,\n    onSelect,\n    partyMorty,\n    partyRick,\n    displayedCharacters,\n  });\n};\n\nexport default Container;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { ICharacter } from \"./interfaces/ICharacter\";\nimport { ICharactersQuery } from \"./interfaces/ICharactersQuery\";\nimport { IQueryResult } from \"./interfaces/IQueryResult\";\nexport const useDebounce = (value: string, delay: number = 300) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport const useSearchForm = () => {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const onSearchChange = useCallback((e) => setSearchValue(e.target.value), []);\n\n  return {\n    searchValue,\n    onSearchChange,\n  };\n};\n\nexport const useSkip = (query: string) => {\n  const [skip, setSkip] = useState(false);\n\n  useEffect(() => {\n    if (query.length < 3) {\n      setSkip(true);\n    } else {\n      setSkip(false);\n    }\n  }, [query]);\n\n  return skip;\n};\n\nexport const useChartacters = (\n  data: IQueryResult,\n  queryError: any\n): ICharactersQuery => {\n  const [charState, setCharState] = useState<ICharactersQuery>({\n    characters: [],\n    status: \"IDLE\",\n    queryError: \"\",\n  });\n\n  useEffect(() => {\n    if (!data) {\n      setCharState({ characters: [], status: \"IDLE\", queryError: \"\" });\n      if (queryError !== undefined)\n        return setCharState({\n          characters: [],\n          status: \"ERROR\",\n          queryError: queryError.message,\n        });\n      return;\n    }\n\n    const charactersArray: ICharacter[] = data.characters.results;\n\n    setCharState({\n      characters: charactersArray,\n      status: \"SUCCES\",\n      queryError: \"\",\n    });\n  }, [data, queryError]);\n\n  return charState;\n};\n\nexport const useChartactersFilter = (characters: ICharacter[]) => {\n  const [deletedItems, setDeletedItems] = useState<number[]>([]);\n  const [partyRick, setPartyRick] = useState<ICharacter>();\n  const [partyMorty, setPartyMorty] = useState<ICharacter>();\n\n  const getID = (e: React.MouseEvent) => {\n    if (!e.target) return null;\n    return e.currentTarget.getAttribute(\"data-id\");\n  };\n\n  const onDelete = (e: React.MouseEvent): void => {\n    const id = getID(e);\n\n    if (!id) return;\n\n    const deletedId = parseInt(id, 10);\n    if (!deletedItems.includes(deletedId))\n      setDeletedItems([...deletedItems, deletedId]);\n  };\n\n  const onSelect = (e: React.MouseEvent) => {\n    const id = getID(e);\n\n    if (!id) return;\n    const selectedId = parseInt(id, 10);\n    const selectedCharacter = characters.find(\n      (c: ICharacter) => parseInt(c.id, 10) === selectedId\n    );\n\n    if (selectedCharacter) {\n      /morty/i.test(selectedCharacter.name)\n        ? setPartyMorty(selectedCharacter)\n        : setPartyMorty(partyMorty);\n      /rick/i.test(selectedCharacter.name)\n        ? setPartyRick(selectedCharacter)\n        : setPartyRick(partyRick);\n    }\n  };\n\n  const getExcludedIds = () => {\n    const selectedRick = partyRick ? parseInt(partyRick.id, 10) : null;\n    const selectedMorty = partyMorty ? parseInt(partyMorty.id, 10) : null;\n    return [...deletedItems, selectedMorty, selectedRick].filter(\n      (item) => item !== null\n    );\n  };\n\n  const filteredCharacters = characters.filter(\n    (c: ICharacter) => !getExcludedIds().includes(parseInt(c.id, 10))\n  );\n\n  const displayedCharacters = getExcludedIds().length\n    ? filteredCharacters.slice(0, 6)\n    : characters.slice(0, 6);\n\n  return {\n    onDelete,\n    onSelect,\n    partyMorty,\n    partyRick,\n    displayedCharacters,\n  };\n};\n","import styled from \"styled-components\";\n\nexport const ResultsGrid = styled.div`\n  display: grid;\n  grid-gap: 30px;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n`;\n\nexport const ErrorMsg = styled.div`\n  min-height: 460px;\n  font-size: 2em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Card = styled.div`\n  height: 220px;\n  width: 180px;\n  position: relative;\n  &:nth-last-child(2) {\n    grid-column-start: 2;\n  }\n`;\n\nexport const CloseBtn = styled.button`\n  background: rgba(255, 255, 255, 0.75);\n  border: none;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  position: absolute;\n  right: 8px;\n  top: 8px;\n  cursor: pointer;\n`;\n\nexport const CardImage = styled.img`\n  max-width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n","import { ICharacter } from \"../../interfaces/ICharacter\";\nimport { ISearchResultsProps } from \"../../interfaces/ISearchResultsProps\";\nimport {\n  ResultsGrid,\n  Card,\n  CardImage,\n  CloseBtn,\n  ErrorMsg,\n} from \"./SearchResultsStyles\";\n\nconst SearchResults = ({\n  characters,\n  status,\n  queryError,\n  onDelete,\n  onSelect,\n}: ISearchResultsProps) => {\n  return (\n    <>\n      {status !== \"ERROR\" ? (\n        <ResultsGrid>\n          {characters.map((c: ICharacter) => (\n            <Card key={parseInt(c.id, 10)}>\n              <CloseBtn\n                className=\"results-item__btn\"\n                data-id={c.id}\n                onClick={onDelete}\n              >\n                <svg\n                  width=\"10\"\n                  height=\"10\"\n                  viewBox=\"0 0 10 10\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M10 1.00714L8.99286 0L5 3.99286L1.00714 0L0 1.00714L3.99286 5L0 8.99286L1.00714 10L5 6.00714L8.99286 10L10 8.99286L6.00714 5L10 1.00714Z\"\n                    fill=\"black\"\n                  />\n                </svg>\n              </CloseBtn>\n              <CardImage\n                data-id={c.id}\n                src={c.image}\n                alt={c.name}\n                onClick={onSelect}\n              />\n            </Card>\n          ))}\n        </ResultsGrid>\n      ) : (\n        <ErrorMsg>{queryError}</ErrorMsg>\n      )}\n    </>\n  );\n};\n\nexport default SearchResults;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  margin: 100px 0 142px;\n`;\n\nexport const Results = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const Heading = styled.h1`\n  font-size: 30px;\n  font-weight: 700;\n  text-align: center;\n`;\n\nexport const Card = styled.div`\n  width: 180px;\n  height: 220px;\n  background: #dadada;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n`;\n\nexport const CardImage = styled.img`\n  max-width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const CardText = styled.span`\n  color: #fff;\n  font-size: 24px;\n  font-weight: 300;\n  margin-bottom: 28px;\n`;\n","import { IPartyProps } from \"../../interfaces/IPartyProps\";\nimport {\n  Card,\n  CardImage,\n  CardText,\n  Heading,\n  Results,\n  Wrapper,\n} from \"./PartyResultsStyles\";\n\nconst PartyResults = ({ partyMorty, partyRick }: IPartyProps) => {\n  return (\n    <Wrapper>\n      <Heading>PARTY</Heading>\n      <Results>\n        <Card>\n          {partyRick ? (\n            <CardImage src={partyRick.image} alt={partyRick.name} />\n          ) : (\n            <CardText>RICK</CardText>\n          )}\n        </Card>\n        <Card>\n          {partyMorty ? (\n            <CardImage src={partyMorty.image} alt={partyMorty.name} />\n          ) : (\n            <CardText>MORTY</CardText>\n          )}\n        </Card>\n      </Results>\n    </Wrapper>\n  );\n};\n\nexport default PartyResults;\n","import styled from \"styled-components\";\n\nexport const InputField = styled.input`\n  max-width: 100%;\n  width: 758px;\n  font-family: Roboto, sans-serif;\n  font-size: 30px;\n  font-weight: 300;\n  text-transform: uppercase;\n  border: 1px solid #a0a0a0;\n  padding: 22px 25px 27px;\n  margin-bottom: 30px;\n  margin-top: 141px;\n`;\n","import { InputField } from \"./InputStyles\";\n\nconst Input = ({ placeholder, ...props }: any) => (\n  <InputField placeholder={placeholder} {...props} />\n);\n\nexport default Input;\n","import ContainerStyle from \"./components/Container/ContainerStyle\";\nimport Container from \"./components/Container\";\n\nimport SearchResults from \"./components/SearchResults\";\nimport PartyResults from \"./components/PartyResults\";\nimport Input from \"./components/Input\";\nimport { IContainerProps } from \"./interfaces/IContainerProps\";\n\nconst App = () => {\n  return (\n    <ContainerStyle>\n      <Container>\n        {({\n          onSearchChange,\n          queryError,\n          status,\n          onDelete,\n          onSelect,\n          partyMorty,\n          partyRick,\n          searchValue,\n          displayedCharacters,\n        }: IContainerProps) => (\n          <>\n            <Input\n              placeholder=\"Enter a character's name\"\n              onChange={onSearchChange}\n              value={searchValue}\n            />\n            <SearchResults\n              characters={displayedCharacters}\n              status={status}\n              queryError={queryError}\n              onDelete={onDelete}\n              onSelect={onSelect}\n            />\n            <PartyResults partyRick={partyRick} partyMorty={partyMorty} />\n          </>\n        )}\n      </Container>\n    </ContainerStyle>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql\",\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}