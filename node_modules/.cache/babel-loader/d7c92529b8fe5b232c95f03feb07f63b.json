{"ast":null,"code":"var _jsxFileName = \"/home/czernous/development/personal/study_projects/rick-and-morty-party/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useDebounce, useSearchForm } from \"./hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RM_CHARACTERS = gql`\n  query getRMcharacters($name: String!) {\n    characters(filter: { name: $name }) {\n      info {\n        count\n      }\n      results {\n        id\n        name\n        image\n      }\n    }\n  }\n`;\n\nfunction App() {\n  _s();\n\n  const {\n    searchValue,\n    onSearchChange\n  } = useSearchForm();\n  const query = useDebounce(searchValue);\n\n  const execSearch = () => {\n    if (searchValue.length < 2) return;\n    getCharacters({\n      variables: {\n        name: query\n      }\n    });\n  };\n\n  const [getCharacters, {\n    loading,\n    data\n  }] = useLazyQuery(RM_CHARACTERS);\n  console.log(data, query);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter a character name\",\n      onChange: onSearchChange,\n      onKeyUp: execSearch,\n      value: searchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WOTZqN3DFDGc4xrZo9Hri699JnM=\", false, function () {\n  return [useSearchForm, useDebounce, useLazyQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/czernous/development/personal/study_projects/rick-and-morty-party/src/App.tsx"],"names":["gql","useLazyQuery","React","useDebounce","useSearchForm","RM_CHARACTERS","App","searchValue","onSearchChange","query","execSearch","length","getCharacters","variables","name","loading","data","console","log"],"mappings":";;;AAAA,SAASA,GAAT,EAAwBC,YAAxB,QAA4C,gBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,SAA3C;;AAEA,MAAMC,aAAa,GAAGL,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;;AAeA,SAASM,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCJ,aAAa,EAArD;AACA,QAAMK,KAAK,GAAGN,WAAW,CAACI,WAAD,CAAzB;;AAEA,QAAMG,UAAU,GAAG,MAAM;AACvB,QAAIH,WAAW,CAACI,MAAZ,GAAqB,CAAzB,EAA4B;AAC5BC,IAAAA,aAAa,CAAC;AAAEC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAEL;AAAR;AAAb,KAAD,CAAb;AACD,GAHD;;AAKA,QAAM,CAACG,aAAD,EAAgB;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAhB,IAAqCf,YAAY,CAACI,aAAD,CAAvD;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBP,KAAlB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AACE,MAAA,WAAW,EAAC,wBADd;AAEE,MAAA,QAAQ,EAAED,cAFZ;AAGE,MAAA,OAAO,EAAEE,UAHX;AAIE,MAAA,KAAK,EAAEH;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GArBQD,G;UACiCF,a,EAC1BD,W,EAO6BF,Y;;;KATpCK,G;AAuBT,eAAeA,GAAf","sourcesContent":["import { gql, useQuery, useLazyQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useDebounce, useSearchForm } from \"./hooks\";\n\nconst RM_CHARACTERS = gql`\n  query getRMcharacters($name: String!) {\n    characters(filter: { name: $name }) {\n      info {\n        count\n      }\n      results {\n        id\n        name\n        image\n      }\n    }\n  }\n`;\n\nfunction App() {\n  const { searchValue, onSearchChange } = useSearchForm();\n  const query = useDebounce(searchValue);\n\n  const execSearch = () => {\n    if (searchValue.length < 2) return;\n    getCharacters({ variables: { name: query } });\n  };\n\n  const [getCharacters, { loading, data }] = useLazyQuery(RM_CHARACTERS);\n  console.log(data, query);\n  return (\n    <div className=\"App\">\n      <input\n        placeholder=\"Enter a character name\"\n        onChange={onSearchChange}\n        onKeyUp={execSearch}\n        value={searchValue}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}