{"ast":null,"code":"var _jsxFileName = \"/home/czernous/development/personal/study_projects/rick-and-morty-party/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery, gql } from \"@apollo/client\";\nimport React from \"react\";\nimport { useDebounce, useSearchForm } from \"./hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RM_CHARACTERS = gql`\n  query GetRMcharacters($searchQuery: String!) {\n    characters(filter: { name: $searchQuery }) {\n      info {\n        count\n      }\n      results {\n        id\n        name\n        image\n      }\n    }\n  }\n`;\n\nfunction App() {\n  _s();\n\n  const {\n    searchValue,\n    onSearchChange\n  } = useSearchForm();\n  const searchQuery = useDebounce(searchValue);\n  const {\n    error,\n    data\n  } = useQuery(RM_CHARACTERS, {\n    variables: searchQuery\n  });\n  console.log(data, error);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter a character name\",\n      onChange: onSearchChange,\n      value: searchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QvAxbic8azuUpOmlCLGkpdVRiA4=\", false, function () {\n  return [useSearchForm, useDebounce, useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/czernous/development/personal/study_projects/rick-and-morty-party/src/App.tsx"],"names":["useQuery","gql","React","useDebounce","useSearchForm","RM_CHARACTERS","App","searchValue","onSearchChange","searchQuery","error","data","variables","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAgC,OAAhC;AACA,SAASC,WAAT,EAAiCC,aAAjC,QAAsD,SAAtD;;AACA,MAAMC,aAAa,GAAGJ,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;;AAeA,SAASK,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCJ,aAAa,EAArD;AACA,QAAMK,WAAW,GAAGN,WAAW,CAACI,WAAD,CAA/B;AAEA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBX,QAAQ,CAACK,aAAD,EAAgB;AAAEO,IAAAA,SAAS,EAAEH;AAAb,GAAhB,CAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBD,KAAlB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AACE,MAAA,WAAW,EAAC,wBADd;AAEE,MAAA,QAAQ,EAAEF,cAFZ;AAGE,MAAA,KAAK,EAAED;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAfQD,G;UACiCF,a,EACpBD,W,EAEIH,Q;;;KAJjBM,G;AAiBT,eAAeA,GAAf","sourcesContent":["import { useQuery, gql } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { useDebounce, useSearch, useSearchForm } from \"./hooks\";\nconst RM_CHARACTERS = gql`\n  query GetRMcharacters($searchQuery: String!) {\n    characters(filter: { name: $searchQuery }) {\n      info {\n        count\n      }\n      results {\n        id\n        name\n        image\n      }\n    }\n  }\n`;\n\nfunction App() {\n  const { searchValue, onSearchChange } = useSearchForm();\n  const searchQuery = useDebounce(searchValue);\n\n  const { error, data } = useQuery(RM_CHARACTERS, { variables: searchQuery });\n  console.log(data, error);\n  return (\n    <div className=\"App\">\n      <input\n        placeholder=\"Enter a character name\"\n        onChange={onSearchChange}\n        value={searchValue}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}