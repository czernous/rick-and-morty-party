{"ast":null,"code":"var _jsxFileName = \"/home/czernous/development/personal/study_projects/rick-and-morty-party/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { GET_RM_CHARACTERS } from \"./queries/GetRmCharacters\";\nimport { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useDebounce, useSearchForm, useSkip, useChartacters } from \"./hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst deletedIds = [1, 6, 2, 85];\nconst selectedIds = [11, 4];\nconst excludedIds = [...selectedIds, ...deletedIds];\n\nconst App = () => {\n  _s();\n\n  const {\n    searchValue,\n    onSearchChange\n  } = useSearchForm();\n  const query = useDebounce(searchValue);\n  const skip = useSkip(query);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_RM_CHARACTERS, {\n    variables: {\n      name: query\n    },\n    skip\n  });\n  const {\n    characters,\n    queryError\n  } = useChartacters({\n    excludedIds,\n    data,\n    error\n  });\n  console.log(error === null || error === void 0 ? void 0 : error.message, data, query, characters, `ERROR IS ${queryError}`);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter a character name\",\n        onChange: onSearchChange,\n        value: searchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !error ? characters.map(c => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: c.image,\n        alt: c.name\n      }, parseInt(c.id, 10), false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this)) : queryError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"3UT8FuXDp8Aq0ZDgkOsF597jCJ0=\", false, function () {\n  return [useSearchForm, useDebounce, useSkip, useQuery, useChartacters];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/czernous/development/personal/study_projects/rick-and-morty-party/src/App.tsx"],"names":["GET_RM_CHARACTERS","useQuery","React","useDebounce","useSearchForm","useSkip","useChartacters","deletedIds","selectedIds","excludedIds","App","searchValue","onSearchChange","query","skip","data","loading","error","variables","name","characters","queryError","console","log","message","map","c","image","parseInt","id"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,2BAAlC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,OAArC,EAA8CC,cAA9C,QAAoE,SAApE;;;AAEA,MAAMC,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,CAAnB;AACA,MAAMC,WAAW,GAAG,CAAC,EAAD,EAAK,CAAL,CAApB;AACA,MAAMC,WAAqB,GAAG,CAAC,GAAGD,WAAJ,EAAiB,GAAGD,UAApB,CAA9B;;AACA,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCR,aAAa,EAArD;AAEA,QAAMS,KAAK,GAAGV,WAAW,CAACQ,WAAD,CAAzB;AACA,QAAMG,IAAI,GAAGT,OAAO,CAACQ,KAAD,CAApB;AAEA,QAAM;AAAEE,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BhB,QAAQ,CAACD,iBAAD,EAAoB;AAC3DkB,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KADgD;AAE3DC,IAAAA;AAF2D,GAApB,CAAzC;AAKA,QAAM;AAAEM,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAkCf,cAAc,CAAC;AACrDG,IAAAA,WADqD;AAErDM,IAAAA,IAFqD;AAGrDE,IAAAA;AAHqD,GAAD,CAAtD;AAMAK,EAAAA,OAAO,CAACC,GAAR,CACEN,KADF,aACEA,KADF,uBACEA,KAAK,CAAEO,OADT,EAEET,IAFF,EAGEF,KAHF,EAIEO,UAJF,EAKG,YAAWC,UAAW,EALzB;AAOA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AACE,QAAA,WAAW,EAAC,wBADd;AAEE,QAAA,QAAQ,EAAET,cAFZ;AAGE,QAAA,KAAK,EAAED;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,gBACG,CAACM,KAAD,GACGG,UAAU,CAACK,GAAX,CAAgBC,CAAD,iBACb;AAA8B,QAAA,GAAG,EAAEA,CAAC,CAACC,KAArC;AAA4C,QAAA,GAAG,EAAED,CAAC,CAACP;AAAnD,SAAUS,QAAQ,CAACF,CAAC,CAACG,EAAH,EAAO,EAAP,CAAlB;AAAA;AAAA;AAAA;AAAA,cADF,CADH,GAIGR;AALN;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAkBD,CA1CD;;GAAMX,G;UACoCN,a,EAE1BD,W,EACDE,O,EAEoBJ,Q,EAKOK,c;;;KAXpCI,G;AA4CN,eAAeA,GAAf","sourcesContent":["import { GET_RM_CHARACTERS } from \"./queries/GetRmCharacters\";\nimport { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useDebounce, useSearchForm, useSkip, useChartacters } from \"./hooks\";\nimport { ICharacter } from \"./interfaces/ICharacter\";\nconst deletedIds = [1, 6, 2, 85];\nconst selectedIds = [11, 4];\nconst excludedIds: number[] = [...selectedIds, ...deletedIds];\nconst App = () => {\n  const { searchValue, onSearchChange } = useSearchForm();\n\n  const query = useDebounce(searchValue);\n  const skip = useSkip(query);\n\n  const { data, loading, error } = useQuery(GET_RM_CHARACTERS, {\n    variables: { name: query },\n    skip,\n  });\n\n  const { characters, queryError }: any = useChartacters({\n    excludedIds,\n    data,\n    error,\n  });\n\n  console.log(\n    error?.message,\n    data,\n    query,\n    characters,\n    `ERROR IS ${queryError}`\n  );\n  return (\n    <>\n      <div className=\"App\">\n        <input\n          placeholder=\"Enter a character name\"\n          onChange={onSearchChange}\n          value={searchValue}\n        />\n      </div>\n      <div>\n        {!error\n          ? characters.map((c: ICharacter) => (\n              <img key={parseInt(c.id, 10)} src={c.image} alt={c.name} />\n            ))\n          : queryError}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}