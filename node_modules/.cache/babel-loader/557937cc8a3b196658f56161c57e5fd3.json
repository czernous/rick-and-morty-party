{"ast":null,"code":"var _jsxFileName = \"/home/czernous/development/personal/study_projects/rick-and-morty-party/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { GET_RM_CHARACTERS } from \"./queries/GetRmCharacters\";\nimport { useQuery } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDebounce, useSearchForm, useSkip } from \"./hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    searchValue,\n    onSearchChange\n  } = useSearchForm();\n  const query = useDebounce(searchValue);\n  const skip = useSkip(query);\n  const deletedIds = [1, 6, 2, 85];\n  const selectedIds = [11, 4];\n  const excludedIds = [...deletedIds, selectedIds];\n  const [charState, setCharState] = useState({\n    characters: []\n  });\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_RM_CHARACTERS, {\n    variables: {\n      name: query\n    },\n    skip\n  });\n  useEffect(() => {\n    if (!data) return;\n    let arr = data.characters.results.filter(c => !excludedIds.includes(parseInt(c.id, 10)));\n    setCharState({\n      characters: arr\n    });\n  }, [data]);\n  console.log(error === null || error === void 0 ? void 0 : error.message, data, query, charState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter a character name\",\n      onChange: onSearchChange,\n      value: searchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mvX/jfxm4CJVzKLHaW8eZy8NBL8=\", false, function () {\n  return [useSearchForm, useDebounce, useSkip, useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/czernous/development/personal/study_projects/rick-and-morty-party/src/App.tsx"],"names":["GET_RM_CHARACTERS","useQuery","React","useEffect","useState","useDebounce","useSearchForm","useSkip","App","searchValue","onSearchChange","query","skip","deletedIds","selectedIds","excludedIds","charState","setCharState","characters","data","loading","error","variables","name","arr","results","filter","c","includes","parseInt","id","console","log","message"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,2BAAlC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,OAArC,QAAoD,SAApD;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCJ,aAAa,EAArD;AAEA,QAAMK,KAAK,GAAGN,WAAW,CAACI,WAAD,CAAzB;AACA,QAAMG,IAAI,GAAGL,OAAO,CAACI,KAAD,CAApB;AACA,QAAME,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,CAAnB;AACA,QAAMC,WAAW,GAAG,CAAC,EAAD,EAAK,CAAL,CAApB;AAEA,QAAMC,WAAW,GAAG,CAAC,GAAGF,UAAJ,EAAgBC,WAAhB,CAApB;AAEA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC;AACzCc,IAAAA,UAAU,EAAE;AAD6B,GAAD,CAA1C;AAIA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BpB,QAAQ,CAACD,iBAAD,EAAoB;AAC3DsB,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAEZ;AAAR,KADgD;AAE3DC,IAAAA;AAF2D,GAApB,CAAzC;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACgB,IAAL,EAAW;AACX,QAAIK,GAAG,GAAGL,IAAI,CAACD,UAAL,CAAgBO,OAAhB,CAAwBC,MAAxB,CACPC,CAAD,IAAY,CAACZ,WAAW,CAACa,QAAZ,CAAqBC,QAAQ,CAACF,CAAC,CAACG,EAAH,EAAO,EAAP,CAA7B,CADL,CAAV;AAGAb,IAAAA,YAAY,CAAC;AAAEC,MAAAA,UAAU,EAAEM;AAAd,KAAD,CAAZ;AACD,GANQ,EAMN,CAACL,IAAD,CANM,CAAT;AAQAY,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ,aAAYA,KAAZ,uBAAYA,KAAK,CAAEY,OAAnB,EAA4Bd,IAA5B,EAAkCR,KAAlC,EAAyCK,SAAzC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AACE,MAAA,WAAW,EAAC,wBADd;AAEE,MAAA,QAAQ,EAAEN,cAFZ;AAGE,MAAA,KAAK,EAAED;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GArCQD,G;UACiCF,a,EAE1BD,W,EACDE,O,EAUoBN,Q;;;KAd1BO,G;AAuCT,eAAeA,GAAf","sourcesContent":["import { GET_RM_CHARACTERS } from \"./queries/GetRmCharacters\";\nimport { useQuery } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDebounce, useSearchForm, useSkip } from \"./hooks\";\n\nfunction App() {\n  const { searchValue, onSearchChange } = useSearchForm();\n\n  const query = useDebounce(searchValue);\n  const skip = useSkip(query);\n  const deletedIds = [1, 6, 2, 85];\n  const selectedIds = [11, 4];\n\n  const excludedIds = [...deletedIds, selectedIds];\n\n  const [charState, setCharState] = useState({\n    characters: [],\n  });\n\n  const { data, loading, error } = useQuery(GET_RM_CHARACTERS, {\n    variables: { name: query },\n    skip,\n  });\n\n  useEffect(() => {\n    if (!data) return;\n    let arr = data.characters.results.filter(\n      (c): any => !excludedIds.includes(parseInt(c.id, 10))\n    );\n    setCharState({ characters: arr });\n  }, [data]);\n\n  console.log(error?.message, data, query, charState);\n  return (\n    <div className=\"App\">\n      <input\n        placeholder=\"Enter a character name\"\n        onChange={onSearchChange}\n        value={searchValue}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}