{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { getRandomItems } from \"./utils\";\nexport const useDebounce = (value, delay = 300) => {\n  _s();\n\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n};\n\n_s(useDebounce, \"KDuPAtDOgxm8PU6legVJOb3oOmA=\");\n\nexport const useSearchForm = () => {\n  _s2();\n\n  const [searchValue, setSearchValue] = useState(\"\");\n  const onSearchChange = useCallback(e => setSearchValue(e.target.value), []);\n  return {\n    searchValue,\n    onSearchChange\n  };\n};\n\n_s2(useSearchForm, \"tEvECnL31J/gpOFOQspFwPMDND0=\");\n\nexport const useSkip = query => {\n  _s3();\n\n  const [skip, setSkip] = useState(false);\n  useEffect(() => {\n    if (query.length < 2) {\n      setSkip(true);\n    } else {\n      setSkip(false);\n    }\n  }, [query]);\n  return skip;\n};\n\n_s3(useSkip, \"WFE15z51KTldBWqLuYqPH7kHfcg=\");\n\nexport const useChartacters = (excludedIds, data, searchValue) => {\n  _s4();\n\n  const [state, setState] = useState({\n    characters: []\n  });\n  useEffect(() => {\n    if (!data && !searchValue.length) {\n      return setState({\n        characters: []\n      });\n    }\n\n    if (!data && searchValue.length) {\n      return setState({\n        characters: state.characters\n      });\n    }\n\n    const filteredArray = data.characters.results.filter(c => !excludedIds.includes(parseInt(c.id, 10)));\n    let arr = excludedIds.length ? filteredArray : data.characters.results;\n    const charactersArray = getRandomItems(6, arr);\n    setState({\n      characters: charactersArray\n    });\n  }, [data]);\n  return state;\n};\n\n_s4(useChartacters, \"2D/y1Da9LFiCKCwQKzpPbl4faxs=\");","map":{"version":3,"sources":["/home/czernous/development/personal/study_projects/rick-and-morty-party/src/hooks.tsx"],"names":["useCallback","useEffect","useState","getRandomItems","useDebounce","value","delay","debouncedValue","setDebouncedValue","timer","setTimeout","clearTimeout","useSearchForm","searchValue","setSearchValue","onSearchChange","e","target","useSkip","query","skip","setSkip","length","useChartacters","excludedIds","data","state","setState","characters","filteredArray","results","filter","c","includes","parseInt","id","arr","charactersArray"],"mappings":";;;;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,cAAT,QAA+B,SAA/B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAgBC,KAAa,GAAG,GAAhC,KAAwC;AAAA;;AACjE,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAACG,KAAD,CAApD;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BF,MAAAA,iBAAiB,CAACH,KAAD,CAAjB;AACD,KAFuB,EAErBC,KAFqB,CAAxB;AAGA,WAAO,MAAM;AACXK,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACD,KAFD;AAGD,GAPQ,EAON,CAACJ,KAAD,EAAQC,KAAR,CAPM,CAAT;AASA,SAAOC,cAAP;AACD,CAbM;;GAAMH,W;;AAeb,OAAO,MAAMQ,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMa,cAAc,GAAGf,WAAW,CAAEgB,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASZ,KAAV,CAAtB,EAAwC,EAAxC,CAAlC;AAEA,SAAO;AACLQ,IAAAA,WADK;AAELE,IAAAA;AAFK,GAAP;AAID,CATM;;IAAMH,a;;AAWb,OAAO,MAAMM,OAAO,GAAIC,KAAD,IAAmB;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,KAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACpBD,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAFD,MAEO;AACLA,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,GANQ,EAMN,CAACF,KAAD,CANM,CAAT;AAQA,SAAOC,IAAP;AACD,CAZM;;IAAMF,O;;AAcb,OAAO,MAAMK,cAAc,GAAG,CAC5BC,WAD4B,EAE5BC,IAF4B,EAG5BZ,WAH4B,KAIzB;AAAA;;AACH,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC;AACjC0B,IAAAA,UAAU,EAAE;AADqB,GAAD,CAAlC;AAIA3B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACwB,IAAD,IAAS,CAACZ,WAAW,CAACS,MAA1B,EAAkC;AAChC,aAAOK,QAAQ,CAAC;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAD,CAAf;AACD;;AAED,QAAI,CAACH,IAAD,IAASZ,WAAW,CAACS,MAAzB,EAAiC;AAC/B,aAAOK,QAAQ,CAAC;AAAEC,QAAAA,UAAU,EAAEF,KAAK,CAACE;AAApB,OAAD,CAAf;AACD;;AACD,UAAMC,aAAa,GAAGJ,IAAI,CAACG,UAAL,CAAgBE,OAAhB,CAAwBC,MAAxB,CACnBC,CAAD,IAAY,CAACR,WAAW,CAACS,QAAZ,CAAqBC,QAAQ,CAACF,CAAC,CAACG,EAAH,EAAO,EAAP,CAA7B,CADO,CAAtB;AAGA,QAAIC,GAAG,GAAGZ,WAAW,CAACF,MAAZ,GAAqBO,aAArB,GAAqCJ,IAAI,CAACG,UAAL,CAAgBE,OAA/D;AAEA,UAAMO,eAAoB,GAAGlC,cAAc,CAAC,CAAD,EAAIiC,GAAJ,CAA3C;AAEAT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,UAAU,EAAES;AAAd,KAAD,CAAR;AACD,GAhBQ,EAgBN,CAACZ,IAAD,CAhBM,CAAT;AAkBA,SAAOC,KAAP;AACD,CA5BM;;IAAMH,c","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { getRandomItems } from \"./utils\";\n\nexport const useDebounce = (value: string, delay: number = 300) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport const useSearchForm = () => {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const onSearchChange = useCallback((e) => setSearchValue(e.target.value), []);\n\n  return {\n    searchValue,\n    onSearchChange,\n  };\n};\n\nexport const useSkip = (query: string) => {\n  const [skip, setSkip] = useState(false);\n\n  useEffect(() => {\n    if (query.length < 2) {\n      setSkip(true);\n    } else {\n      setSkip(false);\n    }\n  }, [query]);\n\n  return skip;\n};\n\nexport const useChartacters = (\n  excludedIds: number[],\n  data: any,\n  searchValue: string\n) => {\n  const [state, setState] = useState({\n    characters: [],\n  });\n\n  useEffect(() => {\n    if (!data && !searchValue.length) {\n      return setState({ characters: [] });\n    }\n\n    if (!data && searchValue.length) {\n      return setState({ characters: state.characters });\n    }\n    const filteredArray = data.characters.results.filter(\n      (c: any) => !excludedIds.includes(parseInt(c.id, 10))\n    );\n    let arr = excludedIds.length ? filteredArray : data.characters.results;\n\n    const charactersArray: any = getRandomItems(6, arr);\n\n    setState({ characters: charactersArray });\n  }, [data]);\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}