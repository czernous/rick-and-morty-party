{"ast":null,"code":"var _jsxFileName = \"/home/czernous/development/personal/study_projects/rick-and-morty-party/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDebounce, useSearchForm } from \"./hooks\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    searchValue,\n    onSearchChange\n  } = useSearchForm();\n  const searchQuery = useDebounce(searchValue);\n  const RM_CHARACTERS = gql`\n    query GetRMcharacters($searchQuery: String!) {\n      characters(filter: { name: $searchQuery }) {\n        info {\n          count\n        }\n        results {\n          id\n          name\n          image\n        }\n      }\n    }\n  `;\n  const {\n    error,\n    data\n  } = useQuery(RM_CHARACTERS, {\n    variables: searchQuery\n  });\n  console.log(data, error);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter a character name\",\n      onChange: onSearchChange,\n      value: searchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QvAxbic8azuUpOmlCLGkpdVRiA4=\", false, function () {\n  return [useSearchForm, useDebounce, useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/czernous/development/personal/study_projects/rick-and-morty-party/src/App.tsx"],"names":["React","useDebounce","useSearchForm","useQuery","gql","App","searchValue","onSearchChange","searchQuery","RM_CHARACTERS","error","data","variables","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,WAAT,EAAiCC,aAAjC,QAAsD,SAAtD;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCL,aAAa,EAArD;AACA,QAAMM,WAAW,GAAGP,WAAW,CAACK,WAAD,CAA/B;AAEA,QAAMG,aAAa,GAAGL,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAbE;AAcA,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBR,QAAQ,CAACM,aAAD,EAAgB;AAAEG,IAAAA,SAAS,EAAEJ;AAAb,GAAhB,CAAhC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBD,KAAlB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AACE,MAAA,WAAW,EAAC,wBADd;AAEE,MAAA,QAAQ,EAAEH,cAFZ;AAGE,MAAA,KAAK,EAAED;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA7BQD,G;UACiCH,a,EACpBD,W,EAgBIE,Q;;;KAlBjBE,G;AA+BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDebounce, useSearch, useSearchForm } from \"./hooks\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nfunction App() {\n  const { searchValue, onSearchChange } = useSearchForm();\n  const searchQuery = useDebounce(searchValue);\n\n  const RM_CHARACTERS = gql`\n    query GetRMcharacters($searchQuery: String!) {\n      characters(filter: { name: $searchQuery }) {\n        info {\n          count\n        }\n        results {\n          id\n          name\n          image\n        }\n      }\n    }\n  `;\n  const { error, data } = useQuery(RM_CHARACTERS, { variables: searchQuery });\n  console.log(data, error);\n  return (\n    <div className=\"App\">\n      <input\n        placeholder=\"Enter a character name\"\n        onChange={onSearchChange}\n        value={searchValue}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}